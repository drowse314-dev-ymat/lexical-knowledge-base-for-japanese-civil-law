# encoding: utf-8

import os
import collections
from .casemaker import (
    idfmap, 
    stopwords,
    termfind_func,
    uniq,
    mapmerge,
)
from ...graph import get_graph
g, _, _ = get_graph(as_nx=True)
_nodes = list(g.nodes())
_idfkeys = list(idfmap().keys())
_both = list(set(_nodes).intersection(set(_idfkeys)))
_stopwords = stopwords()


ADDREF = False


# 86
rt86 = u'不動産及び動産'
rs86 = [
    u'土地及びその定着物は、不動産とする。',
    u'不動産以外の物は、すべて動産とする。',
    u'無記名債権は、動産とみなす。',
]
t86 = (
    u'不動産,動産,'
    u'土地,定着物,不動産,'
    u'不動産,物,動産,'
    u'無記名債権,動産'
).split(u',')

# 167
rt167 = u'債権等の消滅時効'
rs167 = [
    u'債権は、十年間行使しないときは、消滅する。',
    u'債権又は所有権以外の財産権は、二十年間行使しないときは、消滅する。',
]
t167 = (
     u'債権,消滅時効,'
     u'債権,行使,消滅,'
     u'債権,所有権,財産権,行使,消滅'
).split(u',')

# 175
rt175 = u'物権の創設'
rs175 = [u'物権は、この法律その他の法律に定めるもののほか、創設することができない。']
t175 = (
    u'物権,創設,'
    u'物権,法律,法律,創設'
).split(u',')

# 180
rt180 = u'占有権の取得'
rs180 = [u'占有権は、自己のためにする意思をもって物を所持することによって取得する。']
t180 = (
    u'占有権,取得,'
    u'占有権,自己,意思,物,所持,取得'
).split(u',')

# 239
rt239 = u'無主物の帰属'
rs239 = [
    u'所有者のない動産は、所有の意思をもって占有することによって、その所有権を取得する。',
    u'所有者のない不動産は、国庫に帰属する。',
]
t239 = (
    u'無主物,帰属,'
    u'所有者,動産,所有,意思,占有,所有権,取得,'
    u'所有者,不動産,国庫,帰属'
).split(u',')

# 240
rt240 = u'遺失物の拾得'
rs240 = [
    u'遺失物は、遺失物法（平成十八年法律第七十三号）の定めるところに従い公告をした後三箇月以内に',
    u'その所有者が判明しないときは、これを拾得した者がその所有権を取得する。',
]
t240 = (
    u'遺失物,拾得,'
    u'遺失物,遺失物法,法律,公告,'
    u'所有者,判明,拾得,所有権,取得'
).split(u',')

# 241
rt241 = u'埋蔵物の発見'
rs241 = [
    u'埋蔵物は、遺失物法の定めるところに従い公告をした後六箇月以内にその所有者が判明しないときは、'
    u'これを発見した者がその所有権を取得する。',
    u'ただし、他人の所有する物の中から発見された埋蔵物については、これを発見した者及びその他人が'
    u'等しい割合でその所有権を取得する。',
]
t241 = (
    u'埋蔵物,発見,'
    u'埋蔵物,遺失物法,公告,所有者,判明,'
    u'発見,所有権,取得,'
    u'他人,所有,物,発見,埋蔵物,発見,他人,'
    u'割合,所有権,取得'
).split(u',')

# 249
rt249 = u'共有物の使用'
rs249 = [u'各共有者は、共有物の全部について、その持分に応じた使用をすることができる。']
t249 = (
    u'共有物,使用,'
    u'共有者,共有物,全部,持分,使用'
).split(u',')

# 325
rt325 = u''
rs325 = [
    u'次に掲げる原因によって生じた債権を有する者は、債務者の特定の不動産について先取特権を有する。',
    u'不動産の保存',
    u'不動産の工事',
    u'不動産の売買',
]
t325 = (
    u'債権,債務者,不動産,先取特権,'
    u'不動産,保存,'
    u'不動産,工事,'
    u'不動産,売買'
).split(u',')

# 339
rt339 = u'登記をした不動産保存又は不動産工事の先取特権'
rs339 = [u'前二条の規定に従って登記をした先取特権は、抵当権に先立って行使することができる。']
if ADDREF:
    rs339.extend([
        u'不動産保存の先取特権の登記',
        u'不動産工事の先取特権の登記',
    ])
t339 = (
    u'登記,不動産,保存,不動産,工事,先取特権,'
    u'規定,登記,先取特権,抵当権,行使'
).split(u',')

# 341
rt341 = u'抵当権に関する規定の準用'
rs341 = [u'先取特権の効力については、この節に定めるもののほか、その性質に反しない限り、抵当権に関する規定を準用する。']
t341 = (
    u'抵当権,規定,準用,'
    u'先取特権,効力,抵当権,規定,準用'
).split(u',')

# 343
rt343 = u'質権の目的'
rs343 = [u'質権は、譲り渡すことができない物をその目的とすることができない。']
t343 = (
    u'質権,目的,'
    u'質権,物,目的'
).split(u',')
t343_add = t343 + (
    u'担保物権,担保権,制限物権,本権,物権,権利'
).split(u',') + [u'rights and duties']

# 344
rt344 = u'質権の設定'
rs344 = [u'質権の設定は、債権者にその目的物を引き渡すことによって、その効力を生ずる。']
t344 = (
    u'質権,設定,'
    u'質権,設定,債権者,目的物,効力'
).split(u',')

# 358
rt358 = u'不動産質権者による利息の請求の禁止'
rs358 = [u'不動産質権者は、その債権の利息を請求することができない。']
t358 = (
    u'不動産質権者,利息,請求,禁止,'
    u'不動産質権者,債権,利息,請求'
).split(u',')

# 361
rt361 = u'抵当権の規定の準用'
rs361 = [u'不動産質権については、この節に定めるもののほか、その性質に反しない限り、次章（抵当権）の規定を準用する。']
t361 = (
    u'抵当権,規定,準用,'
    u'不動産質権,抵当権,規定,準用'
).split(u',')

# 371
rt371 = u''
rs371 = [u'抵当権は、その担保する債権について不履行があったときは、その後に生じた抵当不動産の果実に及ぶ。']
t371 = (
    u'抵当権,担保,債権,不履行,抵当不動産,果実'
).split(u',')

# 372
rt372 = u'留置権等の規定の準用'
rs372 = [u'第二百九十六条、第三百四条及び第三百五十一条の規定は、抵当権について準用する。']
if ADDREF:
    rs372.extend([
        u'留置権の不可分性',
        u'物上代位',
        u'物上保証人の求償権',
    ])
t372 = (
    u'留置権,規定,準用,'
    u'規定,抵当権,準用'
).split(u',')

# 373
rt373 = u'抵当権の順位'
rs373 = [u'同一の不動産について数個の抵当権が設定されたときは、その抵当権の順位は、登記の前後による。']
t373 = (
    u'抵当権,順位,'
    u'不動産,抵当権,設定,抵当権,順位,登記'
).split(u',')
t373_add = t373 + (
    u'抵当不動産,'
    u'担保物権,担保権,制限物権,本権,物権'
).split(u',')

# 375
rt375 = u'抵当権の被担保債権の範囲'
rs375 = [
    u'抵当権者は、利息その他の定期金を請求する権利を有するときは、その満期となった最後の二年分についてのみ、'
    u'その抵当権を行使することができる。',
    u'ただし、それ以前の定期金についても、満期後に特別の登記をしたときは、その登記の時からその抵当権を行使することを妨げない。',
    u'前項の規定は、抵当権者が債務の不履行によって生じた損害の賠償を請求する権利を有する場合における'
    u'その最後の二年分についても適用する。',
    u'ただし、利息その他の定期金と通算して二年分を超えることができない。',
]
t375 = (
    u'抵当権,被担保債権,範囲,'
    u'抵当権者,利息,定期金,請求,権利,満期,'
    u'抵当権,行使,'
    u'定期金,満期,登記,登記,抵当権,行使,'
    u'規定,抵当権者,債務,不履行,損害,賠償,請求,権利,'
    u'適用,'
    u'利息,定期金'
).split(u',')
t375_add = t375 + (
    u'担保物権,担保権,担保,制限物権,本権,物権,'
    u'債権,履行,義務'
).split(u',') + [u'debts and credits']

# 379
rt379 = u'抵当権消滅請求'
rs379 = [u'抵当不動産の第三取得者は、第三百八十三条の定めるところにより、抵当権消滅請求をすることができる。']
if ADDREF:
    rs379.extend([
        u'抵当権消滅請求の手続',
    ])
t379 = (
    u'抵当権消滅請求,'
    u'抵当不動産,第三取得者,抵当権消滅請求'
).split(u',')

# 380
rt380 = u''
rs380 = [u'主たる債務者、保証人及びこれらの者の承継人は、抵当権消滅請求をすることができない。']
t380 = (
    u'債務者,保証人,承継人,抵当権消滅請求'
).split(u',')

# 382
rt382 = u'抵当権消滅請求の時期'
rs382 = [
    u'抵当不動産の第三取得者は、抵当権の実行としての競売による差押えの効力が発生する前に、'
    u'抵当権消滅請求をしなければならない。'
]
t382 = (
    u'抵当権消滅請求,時期,'
    u'抵当不動産,第三取得者,抵当権,競売,差押え,効力,'
    u'抵当権消滅請求'
).split(u',')

# 387
rt387 = u'抵当権者の同意の登記がある場合の賃貸借の対抗力'
rs387 = [
    u'登記をした賃貸借は、その登記前に登記をした抵当権を有するすべての者が同意をし、かつ、'
    u'その同意の登記があるときは、その同意をした抵当権者に対抗することができる。',
    u'抵当権者が前項の同意をするには、その抵当権を目的とする権利を有する者その他抵当権者の同意によって'
    u'不利益を受けるべき者の承諾を得なければならない。',
]
t387 = (
    u'抵当権者,同意,登記,賃貸借,対抗力,'
    u'登記,賃貸借,登記,登記,抵当権,同意,'
    u'同意,登記,同意,抵当権者,対抗,'
    u'抵当権者,同意,抵当権,目的,権利,抵当権者,同意,'
    u'不利益,承諾'
).split(u',')

# 388
rt388 = u'法定地上権'
rs388 = [
    u'土地及びその上に存する建物が同一の所有者に属する場合において、その土地又は建物につき抵当権が設定され、'
    u'その実行により所有者を異にするに至ったときは、その建物について、地上権が設定されたものとみなす。',
    u'この場合において、地代は、当事者の請求により、裁判所が定める。',
]
t388 = (
    u'法定地上権,'
    u'土地,建物,所有者,土地,建物,抵当権,設定,'
    u'所有者,建物,地上権,設定,'
    u'地代,当事者,請求,裁判所'
).split(u',')

# 390
rt390 = u'抵当不動産の第三取得者による買受け'
rs390 = [u'抵当不動産の第三取得者は、その競売において買受人となることができる。']
t390 = (
    u'抵当不動産,第三取得者,買受け,'
    u'抵当不動産,第三取得者,競売,買受人'
).split(u',')

# 391
rt391 = u'抵当不動産の第三取得者による費用の償還請求'
rs391 = [
    u'抵当不動産の第三取得者は、抵当不動産について必要費又は有益費を支出したときは、第百九十六条の区別に従い、'
    u'抵当不動産の代価から、他の債権者より先にその償還を受けることができる。'
]
if ADDREF:
    rs391.extend([
        u'占有者による費用の償還請求',
    ])
t391 = (
    u'抵当不動産,第三取得者,費用,償還請求,'
    u'抵当不動産,第三取得者,抵当不動産,必要費,有益費,支出,'
    u'抵当不動産,代価,債権者,償還'
).split(u',')

# 393
rt393 = u'共同抵当における代位の付記登記'
rs393 = [u'前条第二項後段の規定により代位によって抵当権を行使する者は、その抵当権の登記にその代位を付記することができる。']
if ADDREF:
    rs393.extend([
        u'共同抵当における代価の配当',
    ])
t393 = (
    u'共同抵当,代位,付記,登記,'
    u'規定,代位,抵当権,行使,抵当権,登記,代位,付記'
).split(u',')

# 395
rt395 = u'抵当建物使用者の引渡しの猶予'
rs395 = [
    u'抵当権者に対抗することができない賃貸借により抵当権の目的である建物の使用又は収益をする者であって'
    u'次に掲げるもの（次項において「抵当建物使用者」という。）は、その建物の競売における買受人の買受けの時から'
    u'六箇月を経過するまでは、その建物を買受人に引き渡すことを要しない。',
    u'競売手続の開始前から使用又は収益をする者',
    u'強制管理又は担保不動産収益執行の管理人が競売手続の開始後にした賃貸借により使用又は収益をする者',
    u'前項の規定は、買受人の買受けの時より後に同項の建物の使用をしたことの対価について、'
    u'買受人が抵当建物使用者に対し相当の期間を定めてその一箇月分以上の支払の催告をし、'
    u'その相当の期間内に履行がない場合には、適用しない。',
]
t395 = (
    u'抵当建物,使用者,引渡し,猶予,'
    u'抵当権者,対抗,賃貸借,抵当権,目的,建物,使用,収益,'
    u'抵当建物,使用者,建物,競売,買受人,買受け,'
    u'経過,建物,買受人,'
    u'競売手続,使用,収益,'
    u'強制管理,担保不動産収益執行,管理人,競売手続,賃貸借,使用,収益,'
    u'規定,買受人,買受け,建物,使用,対価,'
    u'買受人,抵当建物,使用者,期間,支払,催告,'
    u'期間,履行,適用'
).split(u',')

# 397
rt397 = u'抵当不動産の時効取得による抵当権の消滅'
rs397 = [
    u'債務者又は抵当権設定者でない者が抵当不動産について取得時効に必要な要件を具備する占有をしたときは、'
    u'抵当権は、これによって消滅する。',
]
t397 = (
    u'抵当不動産,時効取得,抵当権,消滅,'
    u'債務者,抵当権設定者,抵当不動産,取得時効,要件,具備,占有,'
    u'抵当権,消滅'
).split(u',')

# 398
rt398 = u'抵当権の目的である地上権等の放棄'
rs398 = [
    u'地上権又は永小作権を抵当権の目的とした地上権者又は永小作人は、その権利を放棄しても、'
    u'これをもって抵当権者に対抗することができない。',
]
t398 = (
    u'抵当権,目的,地上権,放棄,'
    u'地上権,永小作権,抵当権,目的,地上権者,永小作人,権利,放棄,'
    u'抵当権者,対抗'
).split(u',')

# 398-2
rt398_2 = u'根抵当権'
rs398_2 = [
    u'抵当権は、設定行為で定めるところにより、一定の範囲に属する不特定の債権を極度額の限度において'
    u'担保するためにも設定することができる。',
    u'前項の規定による抵当権（以下「根抵当権」という。）の担保すべき不特定の債権の範囲は、'
    u'債務者との特定の継続的取引契約によって生ずるものその他債務者との一定の種類の取引によって生ずるものに限定して、'
    u'定めなければならない。',
    u'特定の原因に基づいて債務者との間に継続して生ずる債権又は手形上若しくは小切手上の請求権は、'
    u'前項の規定にかかわらず、根抵当権の担保すべき債権とすることができる。',
]
t398_2 = (
    u'根抵当権,'
    u'抵当権,設定,行為,範囲,債権,極度額,'
    u'担保,設定,'
    u'規定,抵当権,根抵当権,担保,債権,範囲,'
    u'債務者,継続的取引契約,債務者,種類,取引,限定,'
    u'債務者,継続,債権,手形,小切手,請求権,'
    u'規定,根抵当権,担保,債権'
).split(u',')

# 398-3
rt398_3 = u'根抵当権の被担保債権の範囲'
rs398_3 = [
    u'根抵当権者は、確定した元本並びに利息その他の定期金及び債務の不履行によって生じた'
    u'損害の賠償の全部について、極度額を限度として、その根抵当権を行使することができる。',
    u'債務者との取引によらないで取得する手形上又は小切手上の請求権を根抵当権の担保すべき債権とした場合において、'
    u'次に掲げる事由があったときは、その前に取得したものについてのみ、その根抵当権を行使することができる。',
    u'ただし、その後に取得したものであっても、その事由を知らないで取得したものについては、これを行使することを妨げない。',
    u'債務者の支払の停止',
    u'債務者についての破産手続開始、再生手続開始、更生手続開始又は特別清算開始の申立て',
    u'抵当不動産に対する競売の申立て又は滞納処分による差押え',
]
t398_3 = (
    u'根抵当権,被担保債権,範囲,'
    u'根抵当権者,確定,元本,利息,定期金,債務,不履行,'
    u'損害,賠償,全部,極度額,根抵当権,行使,'
    u'債務者,取引,取得,手形,小切手,請求権,根抵当権,担保,債権,'
    u'取得,根抵当権,行使,'
    u'取得,取得,行使,'
    u'債務者,支払,'
    u'債務者,破産手続開始,再生手続開始,更生手続開始,特別清算開始,申立て,'
    u'抵当不動産,競売,申立て,滞納処分,差押え'
).split(u',')
t398_3_add = t398_3 + (
    u'抵当権,担保物権,担保権,制限物権,本権,物権,権利,'
    u'根抵当,根保証,'
    u'元本確定,履行,義務,'
    u'有価証券'
).split(u',') + [u'debts and credits', u'start bankruptcy']

# 398-4
rt398_4 = u'根抵当権の被担保債権の範囲及び債務者の変更'
rs398_4 = [
    u'元本の確定前においては、根抵当権の担保すべき債権の範囲の変更をすることができる。',
    u'債務者の変更についても、同様とする。',
    u'前項の変更をするには、後順位の抵当権者その他の第三者の承諾を得ることを要しない。',
    u'第一項の変更について元本の確定前に登記をしなかったときは、その変更をしなかったものとみなす。',
]
t398_4 = (
    u'根抵当権,被担保債権,範囲,債務者,'
    u'元本,確定,根抵当権,担保,債権,範囲,'
    u'債務者,'
    u'後順位,抵当権者,第三者,承諾,'
    u'元本,確定,登記'
).split(u',')
t398_4_add = t398_4 + (
    u'抵当権,順位,'
    u'担保物権,担保権,制限物権,本権,物権,'
    u'根抵当,根保証,元本確定,'
    u'債務'
).split(u',') + [u'debts and credits']

# 398-5
rt398_5 = u'根抵当権の極度額の変更'
rs398_5 = [u'根抵当権の極度額の変更は、利害関係を有する者の承諾を得なければ、することができない。']
t398_5 = (
    u'根抵当権,極度額,'
    u'根抵当権,極度額,利害関係,承諾'
).split(u',')

# 398-6
rt398_6 = u'根抵当権の元本確定期日の定め'
rs398_6 = [
    u'根抵当権の担保すべき元本については、その確定すべき期日を定め又は変更することができる。',
    u'第三百九十八条の四第二項の規定は、前項の場合について準用する。',
    u'第一項の期日は、これを定め又は変更した日から五年以内でなければならない。',
    u'第一項の期日の変更についてその変更前の期日より前に登記をしなかったときは、担保すべき元本は、その変更前の期日に確定する。',
]
if ADDREF:
    rs398_6.extend([
        u'根抵当権の被担保債権の範囲及び債務者の変更',
    ])
t398_6 = (
    u'根抵当権,元本確定期日,'
    u'根抵当権,担保,元本,確定,期日,'
    u'規定,準用,'
    u'期日,'
    u'期日,期日,登記,担保,元本,期日,確定'
).split(u',')
t398_6_add = t398_6 + (
    u'担保物権,担保権,制限物権,本権,物権,'
    u'根抵当権,根抵当,根保証,元本確定,'
    u'適用'
).split(u',')

# 398-7
rt398_7 = u'根抵当権の被担保債権の譲渡等'
rs398_7 = [
    u'元本の確定前に根抵当権者から債権を取得した者は、その債権について根抵当権を行使することができない。',
    u'元本の確定前に債務者のために又は債務者に代わって弁済をした者も、同様とする。',
    u'元本の確定前に債務の引受けがあったときは、根抵当権者は、引受人の債務について、その根抵当権を行使することができない。',
    u'元本の確定前に債権者又は債務者の交替による更改があったときは、その当事者は、第五百十八条の規定にかかわらず、'
    u'根抵当権を更改後の債務に移すことができない。',
]
if ADDREF:
    rs398_7.extend([
        u'更改後の債務への担保の移転',
    ])
t398_7 = (
    u'根抵当権,被担保債権,譲渡,'
    u'元本,確定,根抵当権者,債権,取得,債権,根抵当権,行使,'
    u'元本,確定,債務者,債務者,弁済,'
    u'元本,確定,債務,引受け,根抵当権者,引受人,債務,根抵当権,行使,'
    u'元本,確定,債権者,債務者,交替,更改,当事者,規定,'
    u'根抵当権,更改,債務'
).split(u',')
t398_7_add = t398_7 + (
    u'抵当権,担保物権,担保権,制限物権,本権,物権,権利,'
    u'設定,処分,'
    u'担保,'
    u'根抵当,根保証,元本確定,'
    u'債務'
).split(u',') + [u'debts and credits']

# 398-11
rt398_11 = u'根抵当権の処分'
rs398_11 = [
    u'元本の確定前においては、根抵当権者は、第三百七十六条第一項の規定による根抵当権の処分をすることができない。',
    u'ただし、その根抵当権を他の債権の担保とすることを妨げない。',
    u'第三百七十七条第二項の規定は、前項ただし書の場合において元本の確定前にした弁済については、適用しない。',
]
if ADDREF:
    rs398_11.extend([
        u'抵当権の処分',
        u'抵当権の処分の対抗要件',
    ])
t398_11 = (
    u'根抵当権,処分,'
    u'元本,確定,根抵当権者,規定,根抵当権,処分,'
    u'根抵当権,債権,担保,'
    u'規定,元本,確定,弁済,適用'
).split(u',')
t398_11_add = t398_11 + (
    u'抵当権,担保物権,担保権,制限物権,本権,物権,権利,'
    u'根抵当,根保証,'
    u'元本確定,債務'
).split(u',') + [u'debts and credits']

# 398-12
rt398_12 = u'根抵当権の譲渡'
rs398_12 = [
    u'元本の確定前においては、根抵当権者は、根抵当権設定者の承諾を得て、その根抵当権を譲り渡すことができる。',
    u'根抵当権者は、その根抵当権を二個の根抵当権に分割して、その一方を前項の規定により譲り渡すことができる。',
    u'この場合において、その根抵当権を目的とする権利は、譲り渡した根抵当権について消滅する。',
    u'前項の規定による譲渡をするには、その根抵当権を目的とする権利を有する者の承諾を得なければならない。',
]
t398_12 = (
    u'根抵当権,譲渡,'
    u'元本,確定,根抵当権者,根抵当権設定者,承諾,根抵当権,'
    u'根抵当権者,根抵当権,根抵当権,分割,規定,'
    u'根抵当権,目的,権利,根抵当権,消滅,'
    u'規定,譲渡,根抵当権,目的,権利,承諾'
).split(u',')
t398_12_add = t398_12 + (
    u'抵当権,担保権,担保物権,制限物権,本権,物権,'
    u'目的物,財産,'
    u'根抵当,根保証,元本確定,'
    u'設定,処分,単独行為,法律行為,意思表示'
).split(u',')

# 398-13
rt398_13 = u'根抵当権の一部譲渡'
rs398_13 = [
    u'元本の確定前においては、根抵当権者は、根抵当権設定者の承諾を得て、その根抵当権の一部譲渡'
    u'（譲渡人が譲受人と根抵当権を共有するため、これを分割しないで譲り渡すことをいう。以下この節において同じ。）'
    u'をすることができる。',
]
t398_13 = (
    u'根抵当権,一部譲渡,'
    u'元本,確定,根抵当権者,根抵当権設定者,承諾,根抵当権,一部譲渡,'
    u'譲渡人,譲受人,根抵当権,共有,分割'
).split(u',')
t398_13_add = t398_13 + (
    u'根抵当,根保証,元本確定,'
    u'譲渡,'
    u'設定,処分,単独行為,法律行為,意思表示'
).split(u',')

rt398_15 = u'抵当権の順位の譲渡又は放棄と根抵当権の譲渡又は一部譲渡'
rs398_15 = [
    u'抵当権の順位の譲渡又は放棄を受けた根抵当権者が、その根抵当権の譲渡又は一部譲渡をしたときは、'
    u'譲受人は、その順位の譲渡又は放棄の利益を受ける。'
]
t398_15 = (
    u'抵当権,順位,譲渡,放棄,根抵当権,譲渡,一部譲渡,'
    u'抵当権,順位,譲渡,放棄,根抵当権者,根抵当権,譲渡,一部譲渡,'
    u'譲受人,順位,譲渡,放棄,利益'
).split(u',')

# 398-16
rt398_16 = u'共同根抵当'
rs398_16 = [
    u'第三百九十二条及び第三百九十三条の規定は、根抵当権については、その設定と同時に同一の債権の担保として'
    u'数個の不動産につき根抵当権が設定された旨の登記をした場合に限り、適用する。'
]
if ADDREF:
    rs398_16.extend([
        u'共同抵当における代価の配当',
        u'共同抵当における代位の付記登記',
    ])
t398_16 = (
    u'共同根抵当,'
    u'規定,根抵当権,設定,債権,担保,'
    u'不動産,根抵当権,設定,登記,適用'
).split(u',')

# 398-17
rt398_17 = u'共同根抵当の変更等'
rs398_17 = [
    u'前条の登記がされている根抵当権の担保すべき債権の範囲、債務者若しくは極度額の変更又はその譲渡若しくは一部譲渡は、'
    u'その根抵当権が設定されているすべての不動産について登記をしなければ、その効力を生じない。',
    u'前条の登記がされている根抵当権の担保すべき元本は、一個の不動産についてのみ確定すべき事由が'
    u'生じた場合においても、確定する。'
]
if ADDREF:
    rs398_17.extend([
        u'共同根抵当',
    ])
t398_17 = (
    u'共同根抵当,'
    u'登記,根抵当権,担保,債権,範囲,債務者,極度額,譲渡,一部譲渡,'
    u'根抵当権,設定,不動産,登記,効力,'
    u'登記,根抵当権,担保,元本,不動産,確定,'
    u'確定'
).split(u',')

# 398-19
rt398_19 = u'根抵当権の元本の確定請求'
rs398_19 = [
    u'根抵当権設定者は、根抵当権の設定の時から三年を経過したときは、担保すべき元本の確定を請求することができる。',
    u'この場合において、担保すべき元本は、その請求の時から二週間を経過することによって確定する。',
    u'根抵当権者は、いつでも、担保すべき元本の確定を請求することができる。',
    u'この場合において、担保すべき元本は、その請求の時に確定する。',
    u'前二項の規定は、担保すべき元本の確定すべき期日の定めがあるときは、適用しない。',
]
t398_19 = (
    u'根抵当権,元本,確定請求,'
    u'根抵当権設定者,根抵当権,設定,経過,担保,元本,確定,請求,'
    u'担保,元本,請求,経過,確定,'
    u'根抵当権者,担保,元本,確定,請求,'
    u'担保,元本,請求,確定,'
    u'規定,担保,元本,確定,期日,適用'
).split(u',')
t398_19_add = t398_19 + (
    u'抵当権,担保物権,担保権,'
    u'根抵当,根保証,'
    u'元本確定,元本確定期日'
).split(u',')

# 398-20
rt398_20 = u'根抵当権の元本の確定事由'
rs398_20 = [
    u'次に掲げる場合には、根抵当権の担保すべき元本は、確定する。',
    u'根抵当権者が抵当不動産について競売若しくは担保不動産収益執行又は第三百七十二条において準用する'
    u'第三百四条の規定による差押えを申し立てたとき。',
    u'ただし、競売手続若しくは担保不動産収益執行手続の開始又は差押えがあったときに限る。',
    u'根抵当権者が抵当不動産に対して滞納処分による差押えをしたとき。',
    u'根抵当権者が抵当不動産に対する競売手続の開始又は滞納処分による差押えがあったことを知った時から二週間を経過したとき。',
    u'債務者又は根抵当権設定者が破産手続開始の決定を受けたとき。',
    u'前項第三号の競売手続の開始若しくは差押え又は同項第四号の破産手続開始の決定の効力が消滅したときは、'
    u'担保すべき元本は、確定しなかったものとみなす。',
    u'ただし、元本が確定したものとしてその根抵当権又はこれを目的とする権利を取得した者があるときは、この限りでない。 ',
]
if ADDREF:
    rs398_20.extend([
        u'留置権等の規定の準用',
        u'留置権の不可分性',
        u'物上代位',
        u'物上保証人の求償権',
    ])
t398_20 = (
    u'根抵当権,元本,確定,'
    u'根抵当権,担保,元本,確定,'
    u'根抵当権者,抵当不動産,競売,担保不動産収益執行,準用,'
    u'規定,差押え,'
    u'競売手続,担保不動産収益執行手続,差押え,'
    u'根抵当権者,抵当不動産,滞納処分,差押え,'
    u'根抵当権者,抵当不動産,競売手続,滞納処分,差押え,経過,'
    u'債務者,根抵当権設定者,破産手続開始,'
    u'競売手続,差押え,破産手続開始,効力,消滅,'
    u'担保,元本,確定,'
    u'元本,確定,根抵当権,目的,権利,取得'
).split(u',')
t398_20_add = t398_20 + (
    u'抵当権,担保物権,担保権,制限物権,本権,物権,権利,'
    u'根抵当,根保証,元本確定,債務,'
    u'適用'
).split(u',') + [u'rights and duties', u'debts and credits']

# 398-21
rt398_21 = u'根抵当権の極度額の減額請求'
rs398_21 = [
    u'元本の確定後においては、根抵当権設定者は、その根抵当権の極度額を、現に存する債務の額と'
    u'以後二年間に生ずべき利息その他の定期金及び債務の不履行による損害賠償の額とを加えた額に'
    u'減額することを請求することができる。',
    u'第三百九十八条の十六の登記がされている根抵当権の極度額の減額については、前項の規定による請求は、'
    u'そのうちの一個の不動産についてすれば足りる。',
]
if ADDREF:
    rs398_21.extend([
        u'共同根抵当',
    ])
t398_21 = (
    u'根抵当権,極度額,減額請求,'
    u'元本,確定,根抵当権設定者,根抵当権,極度額,債務,額,'
    u'利息,定期金,債務,不履行,損害賠償,額,額,'
    u'減額,請求,'
    u'登記,根抵当権,極度額,減額,規定,請求,'
    u'不動産'
).split(u',')

# 399
rt399 = u'債権の目的'
rs399 = [u'債権は、金銭に見積もることができないものであっても、その目的とすることができる。']
t399 = (
    u'債権,目的,'
    u'債権,金銭,目的'
).split(u',')

# 404
rt404 = u'法定利率'
rs404 = [u'利息を生ずべき債権について別段の意思表示がないときは、その利率は、年五分とする。']
t404 = (
    u'法定利率,'
    u'利息,債権,意思表示,利率'
).split(u',')

# 405
rt405 = u'利息の元本への組入れ'
rs405 = [
    u'利息の支払が一年分以上延滞した場合において、債権者が催告をしても、債務者がその利息を支払わないときは、債権者は、'
    u'これを元本に組み入れることができる。',
]
t405 = (
    u'利息,元本,組入れ,'
    u'利息,支払,延滞,債権者,催告,債務者,利息,支払,債権者,'
    u'元本'
).split(u',')
t405_add = t405 + (
    u'債権,債務,'
    u'定期金,金銭'
).split(u',') + [u'debts and credits']

# 475
rt475 = u'弁済として引き渡した物の取戻し'
rs475 = [
    u'弁済をした者が弁済として他人の物を引き渡したときは、その弁済をした者は、更に有効な弁済をしなければ、'
    u'その物を取り戻すことができない。',
]
t475 = (
    u'弁済,物,取戻し,'
    u'弁済,弁済,他人,物,弁済,弁済,'
    u'物'
).split(u',')

# 479
rt479 = u'受領する権限のない者に対する弁済'
rs479 = [
    u'前条の場合を除き、弁済を受領する権限を有しない者に対してした弁済は、債権者がこれによって'
    u'利益を受けた限度においてのみ、その効力を有する。'
]
if ADDREF:
    rs479.extend([
        u'債権の準占有者に対する弁済',
    ])
t479 = (
    u'受領,権限,弁済,'
    u'弁済,受領,権限,弁済,債権者,利益,効力'
).split(u',')

# 483
rt483 = u'特定物の現状による引渡し'
rs483 = [
    u'債権の目的が特定物の引渡しであるときは、弁済をする者は、その引渡しをすべき時の現状でその物を引き渡さなければならない。',
]
t483 = (
    u'特定物,現状,引渡し,'
    u'債権,目的,特定物,引渡し,弁済,引渡し,現状,物'
).split(u',')

# 489
rt489 = u'法定充当'
rs489 = [
    u'弁済をする者及び弁済を受領する者がいずれも前条の規定による弁済の充当の指定をしないときは、'
    u'次の各号の定めるところに従い、その弁済を充当する。',
    u'債務の中に弁済期にあるものと弁済期にないものとがあるときは、弁済期にあるものに先に充当する。',
    u'すべての債務が弁済期にあるとき、又は弁済期にないときは、債務者のために弁済の利益が多いものに先に充当する。',
    u'債務者のために弁済の利益が相等しいときは、弁済期が先に到来したもの又は先に到来すべきものに先に充当する。',
    u'前二号に掲げる事項が相等しい債務の弁済は、各債務の額に応じて充当する。',
]
if ADDREF:
    rs489.extend([
        u'弁済の充当の指定',
    ])
t489 = (
    u'法定充当,'
    u'弁済,弁済,受領,規定,弁済,充当,'
    u'弁済,充当,'
    u'債務,弁済期,弁済期,弁済期,充当,'
    u'債務,弁済期,弁済期,債務者,弁済,利益,充当,'
    u'債務者,弁済,利益,弁済期,到来,到来,充当,'
    u'債務,弁済,債務,額,充当'
).split(u',')

# 500
rt500 = u'法定代位'
rs500 = [u'弁済をするについて正当な利益を有する者は、弁済によって当然に債権者に代位する。']
t500 = (
    u'法定代位,'
    u'弁済,利益,弁済,債権者,代位'
).split(u',')

# 520
rt520 = u''
rs520 = [
    u'債権及び債務が同一人に帰属したときは、その債権は、消滅する。',
    u'ただし、その債権が第三者の権利の目的であるときは、この限りでない。',
]
t520 = (
    u'債権,債務,同一人,帰属,債権,消滅,'
    u'債権,第三者,権利,目的'
).split(u',')

# 558
rt558 = u'売買契約に関する費用'
rs558 = [u'売買契約に関する費用は、当事者双方が等しい割合で負担する。']
t558 = (
    u'売買契約,費用,'
    u'売買契約,費用,当事者,割合,負担'
).split(u',')

# 575
rt575 = u'果実の帰属及び代金の利息の支払'
rs575 = [
    u'まだ引き渡されていない売買の目的物が果実を生じたときは、その果実は、売主に帰属する。',
    u'買主は、引渡しの日から、代金の利息を支払う義務を負う。ただし、代金の支払について期限があるときは、'
    u'その期限が到来するまでは、利息を支払うことを要しない。',
]
t575 = (
    u'果実,帰属,代金,利息,支払,'
    u'売買,目的物,果実,果実,売主,帰属,'
    u'買主,引渡し,代金,利息,支払,義務,代金,支払,期限,'
    u'期限,到来,利息,支払'
).split(u',')

# 601
rt601 = u'賃貸借'
rs601 = [
    u'賃貸借は、当事者の一方がある物の使用及び収益を相手方にさせることを約し、相手方がこれに対して'
    u'その賃料を支払うことを約することによって、その効力を生ずる。',
]
t601 = (
    u'賃貸借,'
    u'賃貸借,当事者,物,使用,収益,相手方,相手方,'
    u'賃料,支払,効力'
).split(u',')

# 602
rt602 = u'短期賃貸借'
rs602 = [
    u'処分につき行為能力の制限を受けた者又は処分の権限を有しない者が賃貸借をする場合には、'
    u'次の各号に掲げる賃貸借は、それぞれ当該各号に定める期間を超えることができない。',
    u'樹木の栽植又は伐採を目的とする山林の賃貸借　十年',
    u'前号に掲げる賃貸借以外の土地の賃貸借　五年',
    u'建物の賃貸借　三年',
    u'動産の賃貸借　六箇月', 
]
t602 = (
    u'短期賃貸借,'
    u'処分,行為能力,制限,処分,権限,賃貸借,'
    u'賃貸借,期間,'
    u'樹木,栽植,伐採,目的,山林,賃貸借,'
    u'賃貸借,土地,賃貸借,'
    u'建物,賃貸借,'
    u'動産,賃貸借'
).split(u',')

# 604
rt604 = u'賃貸借の存続期間'
rs604 = [
    u'賃貸借の存続期間は、二十年を超えることができない。',
    u'契約でこれより長い期間を定めたときであっても、その期間は、二十年とする。',
    u'賃貸借の存続期間は、更新することができる。',
    u'ただし、その期間は、更新の時から二十年を超えることができない。',
]
t604 = (
    u'賃貸借,存続期間,'
    u'賃貸借,存続期間,'
    u'契約,期間,期間,'
    u'賃貸借,存続期間,更新,期間,更新'
).split(u',')

# 616
rt616 = u'使用貸借の規定の準用'
rs616 = [u'第五百九十四条第一項、第五百九十七条第一項及び第五百九十八条の規定は、賃貸借について準用する。']
if ADDREF:
    rs616.extend([
        u'借主による使用及び収益',
        u'借用物の返還の時期',
        u'借主による収去',
    ])
t616 = (
    u'使用貸借,規定,準用,'
    u'規定,賃貸借,準用'
).split(u',')

# 640
rt640 = u'担保責任を負わない旨の特約'
rs640 = [
    u'請負人は、第六百三十四条又は第六百三十五条の規定による担保の責任を負わない旨の特約をしたときであっても、'
    u'知りながら告げなかった事実については、その責任を免れることができない。',
]
t640 = (
    u'担保責任,特約,'
    u'請負人,規定,担保,責任,特約,'
    u'責任'
).split(u',')

# 876
rt876 = u'保佐の開始'
rs876 = [u'保佐は、保佐開始の審判によって開始する。']
t876 = (
    u'保佐,'
    u'保佐,保佐開始,審判'
).split(u',')
t876_add = t876 + (
    u'保佐人'
).split(u',') + [u'start protection']

# 876-6
rt876_6 = u'補助の開始'
rs876_6 = [u'補助は、補助開始の審判によって開始する。']
t876_6 = (
    u'補助,'
    u'補助,補助開始,審判'
).split(u',')
t876_6_add = t876_6 + (
    u'補助人'
).split(u',') + [u'start protection']


# 18/15/1
rtq18_15_1 = u''
rsq18_15_1 = [
    u'根抵当権に関する次の１から５までの記述のうち，正しいものはどれか。（解答欄は，［№17］）',
    u'第一順位の根抵当権者は，後順位の担保権者が目的不動産について申し立てた競売手続が開始しても，'
    u'競売時期の選択について後順位の担保権者より優先するから，元本を確定させず，競売手続を止めることができる。']
tq18_15_1 = (
    u'根抵当権,'
    u'順位,根抵当権者,後順位,担保権者,目的,不動産,競売手続,'
    u'競売,時期,後順位,担保権者,優先,元本,確定,競売手続'
).split(u',')
tq18_15_1_add = tq18_15_1 + (
    u'抵当不動産,'
    u'根抵当権,抵当権,担保物権,担保権,根抵当,根保証,'
    u'制限物権,本権,物権,目的物,'
    u'元本確定,元本確定期日,期日'
).split(u',')

# 18/15/2
rtq18_15_2 = u''
rsq18_15_2 = [
    u'根抵当権に関する次の１から５までの記述のうち，正しいものはどれか。（解答欄は，［№17］）',
    u'根抵当権も元本が確定すれば普通抵当権と同じに扱われるから，被担保債権の利息や損害金のうち根抵当権によって'
    u'担保される部分は，最後の２年分に限定される。'
]
tq18_15_2 = (
    u'根抵当権,'
    u'根抵当権,元本,確定,抵当権,被担保債権,利息,損害,根抵当権,'
    u'担保,部分,限定'
).split(u',')
tq18_15_2_add = tq18_15_2 + (
    u'担保物権,担保権,'
    u'元本確定,'
    u'根抵当,根保証,'
    u'範囲'
).split(u',') + [u'debts and credits']

# 18/15/3
rtq18_15_3 = u''
rsq18_15_3 = [
    u'根抵当権に関する次の１から５までの記述のうち，正しいものはどれか。（解答欄は，［№17］）',
    u'根抵当権が優先的に弁済を受ける限度は極度額によって定まっており，後順位担保権者や一般債権者は，'
    u'どのような債権が担保されるのかについては利害関係を有しないから，被担保債権の範囲の限定は，'
    u'もっぱら抵当権設定者の保護を目的としている。'
]
tq18_15_3 = (
    u'根抵当権,'
    u'根抵当権,優先,弁済,極度額,後順位,担保権者,債権者,'
    u'債権,担保,利害関係,被担保債権,範囲,限定,'
    u'抵当権設定者,保護,目的'
).split(u',')

# 18/15/4
rtq18_15_4 = u''
rsq18_15_4 = [
    u'根抵当権に関する次の１から５までの記述のうち，正しいものはどれか。（解答欄は，［№17］）',
    u'根抵当権の元本の確定前であっても，弁済期が到来した被担保債権をすべて弁済した第三者は，'
    u'債務者に対する求償権を確実にするため，根抵当権者に代位して，根抵当権を行使することができる。'
]
tq18_15_4 = (
    u'根抵当権,'
    u'根抵当権,元本,確定,弁済期,到来,被担保債権,弁済,第三者,'
    u'債務者,求償権,根抵当権者,代位,根抵当権,行使'
).split(u',')

rtq18_15_5 = u''
rsq18_15_5 = [
    u'根抵当権に関する次の１から５までの記述のうち，正しいものはどれか。（解答欄は，［№17］）',
    u'元本確定前の根抵当権は，被担保債権とは切り離された極度額の価値支配権であるから，'
    u'その全部又は一部を譲渡することができるが，債務者や被担保債権も変わり得るから，'
    u'根抵当権設定者の承諾を得なければならない。',
]
tq18_15_5 = (
    u'根抵当権,'
    u'元本確定,根抵当権,被担保債権,極度額,'
    u'全部,一部,譲渡,債務者,被担保債権,'
    u'根抵当権設定者,承諾'
).split(u',')


rtq19_7_3 = u''
rsq19_7_3 = [
    u'次の１から５までの各記述のうち，正しいものを２個選びなさい （解答欄は，［??7］，［??8］順不同）',
    u'家具の所有者ＡがＢに賃貸中の当該家具をＣに売却した場合，特約がなければ，Ｃは，直ちにその所有権を取得するから，'
    u'Ｂに対する賃料債権も，Ｃが売買契約時に取得することになる。',
]
tq19_7_3 = (
    u'家具,所有者,賃貸,家具,売却,特約,所有権,取得,'
    u'賃料,債権,売買契約,取得'
).split(u',')

rtq19_13_e = u''
rsq19_13_e = [
    u'担保物権の効力に関する次のアからオまでの各記述のうち，正しいものを組み合わせたものは，'
    u'後記１から５までのうちどれか。（解答欄は，［??14］）',
    u'根抵当権でない抵当権は，担保する債権の元本のほか，利息その他の定期金のうち満期となった最後の２年分に限り，'
    u'それらを担保する。',
]
tq19_13_e = (
    u'担保物権,効力,'
    u'根抵当権,抵当権,担保,債権,元本,利息,定期金,満期,'
    u'担保'
).split(u',')

rtq19_13_o = u''
rsq19_13_o = [
    u'担保物権の効力に関する次のアからオまでの各記述のうち，正しいものを組み合わせたものは，'
    u'後記１から５までのうちどれか。（解答欄は，［??14］）',
    u'元本の確定した根抵当権は，確定した元本のほか，利息その他の定期金のうち満期となった最後の２年分について，'
    u'極度額を限度として担保する。',
]
tq19_13_o = (
    u'担保物権,効力,'
    u'元本,確定,根抵当権,確定,元本,利息,定期金,満期,'
    u'極度額,担保'
).split(u',')

rtq19_16_1 = u''
rsq19_16_1 = [
    u'抵当権の法律関係に関する次の１から５までの各記述のうち，誤っているものはどれか。（解答欄は，［??17］）',
    u'抵当権が設定された建物を，抵当権者に対抗することができない賃貸借に基づいて使用する者は，'
    u'競売手続開始前から使用していれば，建物の買受人が買い受けた時から６か月を経過するまでは，'
    u'その建物の買受人への引渡しを猶予される。',
]
tq19_16_1 = (
    u'抵当権,法律,'
    u'抵当権,設定,建物,抵当権者,対抗,賃貸借,使用,'
    u'競売手続,使用,建物,買受人,経過,'
    u'建物,買受人,引渡し,猶予'
).split(u',')

rtq19_16_2 = u''
rsq19_16_2 = [
    u'抵当権の法律関係に関する次の１から５までの各記述のうち，誤っているものはどれか。（解答欄は，［??17］）',
    u'登記をした賃貸借は，その登記前に登記をした抵当権を有するすべての者が同意をすれば，'
    u'その同意をした抵当権者に対抗することができる。',
]
tq19_16_2 = (
    u'抵当権,法律,'
    u'登記,賃貸借,登記,登記,抵当権,同意,'
    u'同意,抵当権者,対抗'
).split(u',')

rtq19_16_4 = u''
rsq19_16_4 = [
    u'抵当権の法律関係に関する次の１から５までの各記述のうち，誤っているものはどれか。（解答欄は，［??17］）',
    u'抵当権が設定された不動産について，地上権の設定を受けた者は，抵当権消滅請求をすることができない。',
]
tq19_16_4 = (
    u'抵当権,法律,'
    u'抵当権,設定,不動産,地上権,設定,抵当権消滅請求'
).split(u',')

rtq19_16_5 = u''
rsq19_16_5 = [
    u'抵当権の法律関係に関する次の１から５までの各記述のうち，誤っているものはどれか。（解答欄は，［??17］）',
    u'被担保債権の債務不履行後に，抵当不動産の所有者が，その後に生じた果実を収受しても，不当利得にはならない。',
]
tq19_16_5 = (
    u'抵当権,法律,'
    u'被担保債権,債務不履行,抵当不動産,所有者,果実,収受,不当利得'
).split(u',')

allart_term_sets = {
    u'86': t86,
    u'167': t167,
    u'175': t175,
    u'180': t180,
    u'239': t239,
    u'240': t240,
    u'241': t241,
    u'249': t249,
    u'325': t325,
    u'339': t339,
    u'341': t341,
    u'343': t343,
    u'344': t344,
    u'358': t358,
    u'361': t361,
    u'371': t371,
    u'372': t372,
    u'373': t373,
    u'375': t375,
    u'379': t379,
    u'380': t380,
    u'382': t382,
    u'387': t387,
    u'388': t388,
    u'390': t390,
    u'391': t391,
    u'393': t393,
    u'395': t395,
    u'397': t397,
    u'398': t398,
    u'398_2': t398_2,
    u'398_3': t398_3,
    u'398_4': t398_4,
    u'398_5': t398_5,
    u'398_6': t398_6,
    u'398_7': t398_7,
    u'398_11': t398_11,
    u'398_12': t398_12,
    u'398_13': t398_13,
    u'398_15': t398_15,
    u'398_16': t398_16,
    u'398_17': t398_17,
    u'398_19': t398_19,
    u'398_20': t398_20,
    u'398_21': t398_21,
    u'399': t399,
    u'404': t404,
    u'405': t405,
    u'475': t475,
    u'479': t479,
    u'483': t483,
    u'489': t489,
    u'500': t500,
    u'520': t520,
    u'558': t558,
    u'575': t575,
    u'601': t601,
    u'602': t602,
    u'604': t604,
    u'616': t616,
    u'640': t640,
    u'876': t876,
    u'876_6': t876_6,
}
allart_raw_titles = {
    u'86': rt86,
    u'167': rt167,
    u'175': rt175,
    u'180': rt180,
    u'239': rt239,
    u'240': rt240,
    u'241': rt241,
    u'249': rt249,
    u'325': rt325,
    u'339': rt339,
    u'341': rt341,
    u'343': rt343,
    u'344': rt344,
    u'358': rt358,
    u'361': rt361,
    u'371': rt371,
    u'372': rt372,
    u'373': rt373,
    u'375': rt375,
    u'379': rt379,
    u'380': rt380,
    u'382': rt382,
    u'387': rt387,
    u'388': rt388,
    u'390': rt390,
    u'391': rt391,
    u'393': rt393,
    u'395': rt395,
    u'397': rt397,
    u'398': rt398,
    u'398_2': rt398_2,
    u'398_3': rt398_3,
    u'398_4': rt398_4,
    u'398_5': rt398_5,
    u'398_6': rt398_6,
    u'398_7': rt398_7,
    u'398_11': rt398_11,
    u'398_12': rt398_12,
    u'398_13': rt398_13,
    u'398_15': rt398_15,
    u'398_16': rt398_16,
    u'398_17': rt398_17,
    u'398_19': rt398_19,
    u'398_20': rt398_20,
    u'398_21': rt398_21,
    u'399': rt399,
    u'404': rt404,
    u'405': rt405,
    u'475': rt475,
    u'479': rt479,
    u'483': rt483,
    u'489': rt489,
    u'500': rt500,
    u'520': rt520,
    u'558': rt558,
    u'575': rt575,
    u'601': rt601,
    u'602': rt602,
    u'604': rt604,
    u'616': rt616,
    u'640': rt640,
    u'876': rt876,
    u'876_6': rt876_6,
}
allart_raw_sents = {
    u'86': rs86,
    u'167': rs167,
    u'175': rs175,
    u'180': rs180,
    u'239': rs239,
    u'240': rs240,
    u'241': rs241,
    u'249': rs249,
    u'325': rs325,
    u'339': rs339,
    u'341': rs341,
    u'343': rs343,
    u'344': rs344,
    u'358': rs358,
    u'361': rs361,
    u'371': rs371,
    u'372': rs372,
    u'373': rs373,
    u'375': rs375,
    u'379': rs379,
    u'380': rs380,
    u'382': rs382,
    u'387': rs387,
    u'388': rs388,
    u'390': rs390,
    u'391': rs391,
    u'393': rs393,
    u'395': rs395,
    u'397': rs397,
    u'398': rs398,
    u'398_2': rs398_2,
    u'398_3': rs398_3,
    u'398_4': rs398_4,
    u'398_5': rs398_5,
    u'398_6': rs398_6,
    u'398_7': rs398_7,
    u'398_11': rs398_11,
    u'398_12': rs398_12,
    u'398_13': rs398_13,
    u'398_15': rs398_15,
    u'398_16': rs398_16,
    u'398_17': rs398_17,
    u'398_19': rs398_19,
    u'398_20': rs398_20,
    u'398_21': rs398_21,
    u'399': rs399,
    u'404': rs404,
    u'405': rs405,
    u'475': rs475,
    u'479': rs479,
    u'483': rs483,
    u'489': rs489,
    u'500': rs500,
    u'520': rs520,
    u'558': rs558,
    u'575': rs575,
    u'601': rs601,
    u'602': rs602,
    u'604': rs604,
    u'616': rs616,
    u'640': rs640,
    u'876': rs876,
    u'876_6': rs876_6,
}

allq_term_sets = {
    u'q18/15/1': tq18_15_1,
    u'q18/15/2': tq18_15_2,
    u'q18/15/3': tq18_15_3,
    u'q18/15/4': tq18_15_4,
    u'q18/15/5': tq18_15_5,
    u'q19/7/3': tq19_7_3,
    u'q19/13/エ': tq19_13_e,
    u'q19/13/オ': tq19_13_o,
    u'q19/16/1': tq19_16_1,
    u'q19/16/2': tq19_16_2,
    u'q19/16/4': tq19_16_4,
    u'q19/16/5': tq19_16_5,
}
allq_raw_titles = {
    u'q18/15/1': rtq18_15_1,
    u'q18/15/2': rtq18_15_2,
    u'q18/15/3': rtq18_15_3,
    u'q18/15/4': rtq18_15_4,
    u'q18/15/5': rtq18_15_5,
    u'q19/7/3': rtq19_7_3,
    u'q19/13/エ': rtq19_13_e,
    u'q19/13/オ': rtq19_13_o,
    u'q19/16/1': rtq19_16_1,
    u'q19/16/2': rtq19_16_2,
    u'q19/16/4': rtq19_16_4,
    u'q19/16/5': rtq19_16_5,
}
all_raw_titles = mapmerge(allart_raw_titles, allq_raw_titles)
allq_raw_sents = {
    u'q18/15/1': rsq18_15_1,
    u'q18/15/2': rsq18_15_2,
    u'q18/15/3': rsq18_15_3,
    u'q18/15/4': rsq18_15_4,
    u'q18/15/5': rsq18_15_5,
    u'q19/7/3': rsq19_7_3,
    u'q19/13/エ': rsq19_13_e,
    u'q19/13/オ': rsq19_13_o,
    u'q19/16/1': rsq19_16_1,
    u'q19/16/2': rsq19_16_2,
    u'q19/16/4': rsq19_16_4,
    u'q19/16/5': rsq19_16_5,
}
all_raw_sents = mapmerge(allart_raw_sents, allq_raw_sents)

answermap = {
    u'q18/15/1': (u'398_20', ),
    u'q18/15/2': (u'398_3', ),
    u'q18/15/3': (u'398_2', ),
    u'q18/15/4': (u'398_7', ),
    u'q18/15/5': (u'398_12', u'398_13'),
    u'q19/7/3': (u'575', ),
    u'q19/13/エ': (u'375', ),
    u'q19/13/オ': (u'398_3', ),
    u'q19/16/1': (u'395', ),
    u'q19/16/2': (u'387', ),
    u'q19/16/4': (u'379', ),
    u'q19/16/5': (u'371', ),
}

idf_allterms = list(set(_idfkeys).difference(set(_stopwords)))
find_idfterms = termfind_func(_idfkeys, stopwords())
def idf_term_sets(raw_titles, raw_sents, uniqterms=False):
    term_sets = {}
    for label in raw_titles:
        title = raw_titles[label]
        sents = raw_sents[label]
        term_sets[label] = find_idfterms([title] + sents)
    if uniqterms:
        term_sets = uniq(term_sets)
    return term_sets
allart_idfterm_sets = idf_term_sets(allart_raw_titles, allart_raw_sents, uniqterms=False)
allq_idfterm_sets = idf_term_sets(allq_raw_titles, allq_raw_sents, uniqterms=False)
all_idfterm_sets = mapmerge(allart_idfterm_sets, allq_idfterm_sets)

node_allterms = list(set(_nodes).difference(set(_stopwords)))
find_nodeterms = termfind_func(_nodes, stopwords())
def node_term_sets(raw_titles, raw_sents):
    term_sets = {}
    for label in raw_titles:
        title = raw_titles[label]
        sents = raw_sents[label]
        term_sets[label] = find_nodeterms([title] + sents)
    term_sets = uniq(term_sets)
    return term_sets
allart_stopterm_sets = node_term_sets(allart_raw_titles, allart_raw_sents)
allq_stopterm_sets = node_term_sets(allq_raw_titles, allq_raw_sents)
all_nodeterm_sets = mapmerge(allart_stopterm_sets, allq_stopterm_sets)

mixed_allterms = list(set(_nodes + _idfkeys).difference(set(_stopwords)))
find_mixedterms = termfind_func(_nodes + _idfkeys, stopwords(), prefer_from=[_both, _nodes])
def mixed_term_sets(raw_titles, raw_sents):
    term_sets = {}
    for label in raw_titles:
        title = raw_titles[label]
        sents = raw_sents[label]
        term_sets[label] = find_mixedterms([title] + sents)
    term_sets = uniq(term_sets)
    return term_sets
allart_mixedterm_sets = mixed_term_sets(allart_raw_titles, allart_raw_sents)
allq_mixedterm_sets = mixed_term_sets(allq_raw_titles, allq_raw_sents)
all_mixedterm_sets = mapmerge(allart_mixedterm_sets, allq_mixedterm_sets)


if __name__ == '__main__':

    find_nodeterms = termfind_func(_nodes, [])

    def term_difference(list_a, list_b):
        cp_a, cp_b = list_a[:], list_b[:]
        for in_a in list_a:
            if in_a in cp_b:
                cp_b.remove(in_a)
        for in_b in list_b:
            if in_b in cp_a:
                cp_a.remove(in_b)
        return cp_a, cp_b

    for label, terms in allart_term_sets.iteritems():
        title = allart_raw_titles[label]
        sents = allart_raw_sents[label]
        found = find_nodeterms([title] + sents)
        unexpected, missed = term_difference(terms, found)
        assert terms == found, \
               (label + u'-- M:' + u','.join(missed) + u' U:' + u','.join(unexpected)).encode('utf-8')

    for label, terms in allq_term_sets.iteritems():
        title = allq_raw_titles[label]
        sents = allq_raw_sents[label]
        found = find_nodeterms([title] + sents)
        unexpected, missed = term_difference(terms, found)
        assert terms == found, \
               (label + u'-- M:' + u','.join(missed) + u' U:' + u','.join(unexpected)).encode('utf-8')
